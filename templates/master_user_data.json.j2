{
        "Fn::Base64": {
          "Fn::Join": [
            "",
            [
            "#cloud-config\n",
            "\"coreos\":\n",
            "  \"units\":\n",
            "  - \"command\": |-\n",
            "      start\n",
            "    \"content\": |\n",
            "      [Unit]\n",
            "      Description=AWS Setup: Formats the /var/lib ephemeral drive\n",
            "      Before=var-lib.mount dbus.service\n",
            "      [Service]\n",
            "      Type=oneshot\n",
            "      RemainAfterExit=yes\n",
            "      ExecStart=/bin/bash -c \"(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)\"\n",
            "    \"name\": |-\n",
            "      format-var-lib-ephemeral.service\n",
            "  - \"command\": |-\n",
            "      start\n",
            "    \"content\": |\n",
            "      [Unit]\n",
            "      Description=AWS Setup: Mount /var/lib\n",
            "      Before=dbus.service\n",
            "      [Mount]\n",
            "      What=/dev/xvdb\n",
            "      Where=/var/lib\n",
            "      Type=ext4\n",
            "    \"name\": |-\n",
            "      var-lib.mount\n",
            "  - \"command\": |-\n",
            "      stop\n",
            "    \"mask\": !!bool |-\n",
            "      true\n",
            "    \"name\": |-\n",
            "      etcd.service\n",
            "  - \"command\": |-\n",
            "      stop\n",
            "    \"mask\": !!bool |-\n",
            "      true\n",
            "    \"name\": |-\n",
            "      update-engine.service\n",
            "  - \"command\": |-\n",
            "      stop\n",
            "    \"mask\": !!bool |-\n",
            "      true\n",
            "    \"name\": |-\n",
            "      locksmithd.service\n",
            "  - \"command\": |-\n",
            "      stop\n",
            "    \"name\": |-\n",
            "      systemd-resolved.service\n",
            "  - \"command\": |-\n",
            "      restart\n",
            "    \"name\": |-\n",
            "      systemd-journald.service\n",
            "  - \"command\": |-\n",
            "      restart\n",
            "    \"name\": |-\n",
            "      docker.service\n",
            "  - \"command\": |-\n",
            "      start\n",
            "    \"content\": |\n",
            "      [Unit]\n",
            "      Before=dcos.target\n",
            "      [Service]\n",
            "      Type=oneshot\n",
            "      StandardOutput=journal+console\n",
            "      StandardError=journal+console\n",
            "      ExecStartPre=/usr/bin/mkdir -p /etc/profile.d\n",
            "      ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh\n",
            "    \"name\": |-\n",
            "      dcos-link-env.service\n",
            "  - \"content\": |\n",
            "      [Unit]\n",
            "      Description=Pkgpanda: Download DC/OS to this host.\n",
            "      After=network-online.target\n",
            "      Wants=network-online.target\n",
            "      ConditionPathExists=!/opt/mesosphere/\n",
            "      [Service]\n",
            "      EnvironmentFile=/etc/mesosphere/setup-flags/bootstrap-id\n",
            "      Type=oneshot\n",
            "      StandardOutput=journal+console\n",
            "      StandardError=journal+console\n",
            "      ExecStartPre=/usr/bin/curl -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/EarlyAccess/bootstrap/${BOOTSTRAP_ID}.bootstrap.tar.xz\n",
            "      ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere\n",
            "      ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere\n",
            "      ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz\n",
            "    \"name\": |-\n",
            "      dcos-download.service\n",
            "  - \"command\": |-\n",
            "      start\n",
            "    \"content\": |\n",
            "      [Unit]\n",
            "      Description=Pkgpanda: Specialize DC/OS for this host.\n",
            "      Requires=dcos-download.service\n",
            "      After=dcos-download.service\n",
            "      [Service]\n",
            "      Type=oneshot\n",
            "      StandardOutput=journal+console\n",
            "      StandardError=journal+console\n",
            "      EnvironmentFile=/opt/mesosphere/environment\n",
            "      ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd\n",
            "      [Install]\n",
            "      WantedBy=multi-user.target\n",
            "    \"enable\": !!bool |-\n",
            "      true\n",
            "    \"name\": |-\n",
            "      dcos-setup.service\n",
            "  - \"command\": |-\n",
            "      start\n",
            "    \"content\": |-\n",
            "      [Unit]\n",
            "      Description=AWS Setup: Signal CloudFormation Success\n",
            "      After=dcos.target\n",
            "      Requires=dcos.target\n",
            "      ConditionPathExists=!/var/lib/dcos-cfn-signal\n",
            "      [Service]\n",
            "      Type=simple\n",
            "      Restart=on-failure\n",
            "      StartLimitInterval=0\n",
            "      RestartSec=15s\n",
            "      EnvironmentFile=/opt/mesosphere/environment\n",
            "      EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata\n",
            "      Environment=\"AWS_CFN_SIGNAL_THIS_RESOURCE=MasterServerGroup\"\n",
            "      ExecStartPre=/bin/ping -c1 leader.mesos\n",
            "      ExecStartPre=/opt/mesosphere/bin/cfn-signal\n",
            "      ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal\n",
            "    \"name\": |-\n",
            "      dcos-cfn-signal.service\n",
            "  - \"command\": |-\n",
            "      start\n",
            "    \"enable\": !!bool |-\n",
            "      true\n",
            "    \"name\": |-\n",
            "      rpc-statd.service\n",
            "    \"content\": |-\n",
            "      [Mount]\n",
            "      What=$AZ_ZONE.fs-15f71dbc.efs.{{ region }}.amazonaws.com:/\n",
            "      Where=/mnt/efs\n",
            "      Type=nfs\n",
            "    \"name\": |-\n",
            "      mnt-efs.mount\n",
            "  - \"command\": |-\n",
            "      start\n",
            "    \"content\": |-\n",
            "      [Unit]\n",
            "      Description=command\n",
            "      After=dcos-cfn-signal.service\n",
            "      [Service]\n",
            "      Type=oneshot\n",
            "      StandardOutput=journal+console\n",
            "      StandardError=journal+console\n",
            "      ExecStart=/bin/sh -c \"AZ_ZONE=$(curl -L http://169.254.169.254/latest/meta-data/placement/availability-zone); sed -i \"s/AZ_ZONE/$AZ_ZONE/\" /etc/systemd/system/mnt-efs.mount; systemctl daemon-reload; systemctl restart mnt-efs.mount\"\n",
            "      [Install]\n",
            "      WantedBy=multi-user.target\n",
            "    \"enable\": !!bool |-\n",
            "      true\n",
            "    \"name\": |-\n",
            "      runcmd.service\n",
            "  \"update\":\n",
            "    \"reboot-strategy\": |-\n",
            "      off\n",
            "\"write_files\":\n",
            "- \"content\": |\n",
            "    OPTS_RPC_MOUNTD=\"\"\n",
            "  \"path\": |-\n",
            "    /etc/conf.d/nfs\n",
            "  \"permissions\": |-\n",
            "    0644\n",
            "- \"content\": |\n",
            "    https://downloads.dcos.io/dcos/EarlyAccess\n",
            "  \"owner\": |-\n",
            "    root\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/setup-flags/repository-url\n",
            "  \"permissions\": |-\n",
            "    0644\n",
            "- \"content\": |\n",
            "    BOOTSTRAP_ID=3a2b7e03c45cd615da8dfb1b103943894652cd71\n",
            "  \"owner\": |-\n",
            "    root\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/setup-flags/bootstrap-id\n",
            "  \"permissions\": |-\n",
            "    0644\n",
            "- \"content\": |\n",
            "    [\"dcos-config--setup_b9372277c9fedaca077d7638e6e445af062d1d86\", \"dcos-metadata--setup_b9372277c9fedaca077d7638e6e445af062d1d86\"]\n",
            "  \"owner\": |-\n",
            "    root\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/setup-flags/cluster-packages.json\n",
            "  \"permissions\": |-\n",
            "    0644\n",
            "- \"content\": |\n",
            "    [Journal]\n",
            "    MaxLevelConsole=warning\n",
            "  \"owner\": |-\n",
            "    root\n",
            "  \"path\": |-\n",
            "    /etc/systemd/journald.conf.d/dcos.conf\n",
            "  \"permissions\": |-\n",
            "    0644\n",
            "- \"content\": |\n",
            "    MESOS_CLUSTER=",
            {
              "Ref": "AWS::StackName"
            },
            "",
            "\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/mesos-master-provider\n",
            "- \"content\": |\n",
            "    ADMINROUTER_ACTIVATE_AUTH_MODULE=",
            "{{ oauthenabled }}",
            "",
            "\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/adminrouter.env\n",
            "- \"content\": |\n",
            "    MASTER_SOURCE=exhibitor\n",
            "    EXHIBITOR_ADDRESS=",
            {
              "Fn::GetAtt": [
                "InternalMasterLoadBalancer",
                "DNSName"
              ]
            },
            "",
            "\n",
            "    RESOLVERS=169.254.169.253\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/dns_config\n",
            "- \"content\": |\n",
            "    EXHIBITOR_BACKEND=AWS_S3\n",
            "    AWS_REGION=",
            {
              "Ref": "AWS::Region"
            },
            "",
            "\n",
            "    AWS_S3_BUCKET=",
            {
              "Ref": "ExhibitorS3Bucket"
            },
            "",
            "\n",
            "    AWS_S3_PREFIX=",
            {
              "Ref": "AWS::StackName"
            },
            "",
            "\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor\n",
            "- \"content\": |\n",
            "    {\"uiConfiguration\":{\"plugins\":{\"banner\":{\"enabled\":false,\"backgroundColor\":\"#1E232F\",\"foregroundColor\":\"#FFFFFF\",\"headerTitle\":null,\"headerContent\":null,\"footerContent\":null,\"imagePath\":null,\"dismissible\":null},\"branding\":{\"enabled\":false},\"external-links\": {\"enabled\": false},\n",
            "    \"authentication\":{\"enabled\":false},\n",
            "\n",
            "    \"oauth\":{\"enabled\":",
            "{{ oauthenabled }}",
            ",\"authHost\":\"https://dcos.auth0.com\"},",
            "\n",
            "\n",
            "    \"networking\":{\"enabled\":false},\"organization\":{\"enabled\":false},\"tracking\":{\"enabled\":true}}}}\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/ui-config.json\n",
            "- \"content\": |\n",
            "    AWS_REGION=",
            {
              "Ref": "AWS::Region"
            },
            "",
            "\n",
            "    AWS_STACK_ID=",
            {
              "Ref": "AWS::StackId"
            },
            "",
            "\n",
            "    AWS_STACK_NAME=",
            {
              "Ref": "AWS::StackName"
            },
            "",
            "\n",
            "    AWS_IAM_MASTER_ROLE_NAME=",
            {
              "Ref": "MasterRole"
            },
            "",
            "\n",
            "    AWS_IAM_SLAVE_ROLE_NAME=",
            {
              "Ref": "SlaveRole"
            },
            "",
            "\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/cfn_signal_metadata\n",
            "- \"content\": |-\n",
            "    {}\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/setup-packages/dcos-provider-aws--setup/pkginfo.json\n",
            "- \"content\": \"\"\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/roles/master\n",
            "- \"content\": \"\"\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/roles/aws_master\n",
            "- \"content\": \"\"\n",
            "  \"path\": |-\n",
            "    /etc/mesosphere/roles/aws\n"
            ]
          ]
        }
}
